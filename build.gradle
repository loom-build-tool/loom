plugins {
    id "com.github.jk1.dependency-license-report" version "0.3.12" apply false
}

apply plugin: 'java'
archivesBaseName = 'loom'

subprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'com.github.jk1.dependency-license-report'
//    apply plugin: 'findbugs'
//    apply plugin: 'pmd'

    group = 'builders.loom'

    sourceCompatibility = 10

    checkstyle {
        configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
        configProperties = [samedir: "${rootDir}/config/checkstyle", project_loc: "${rootDir}"]
    }

//    pmd {
//        consoleOutput = true
//    }
//
//    tasks.withType(FindBugs) {
//        reports {
//            xml.enabled = false
//            html.enabled = true
//        }
//    }

    repositories {
        jcenter()
    }

    licenseReport {
        renderer = new com.github.jk1.license.render.CsvReportRenderer()
        configurations = ['runtime']
    }
}

task zip(type: Zip) {
    into(archivesBaseName + "-" + version) {
        from 'LICENSE'
        from 'NOTICE'
        into('licenses') {
            from 'licenses'
        }
        into("lib") {
            from project(':modules:cli').configurations.runtime.allArtifacts.files
            from project(':modules:cli').configurations.runtime
        }
        into("service-maven") {
            from project(':modules:service-maven').configurations.runtime.allArtifacts.files
            from project(':modules:service-maven').configurations.runtime
        }
        into("plugin-java") {
            from project(':modules:plugin-java').configurations.runtime.allArtifacts.files
            from project(':modules:plugin-java').configurations.runtime
        }
        into("plugin-junit") {
            from project(':modules:plugin-junit').configurations.runtime.allArtifacts.files
            from project(':modules:plugin-junit').configurations.runtime
        }
        into("plugin-maven") {
            from project(':modules:plugin-maven').configurations.runtime.allArtifacts.files
            from project(':modules:plugin-maven').configurations.runtime
        }
        into("plugin-checkstyle") {
            from project(':modules:plugin-checkstyle').configurations.runtime.allArtifacts.files
            from project(':modules:plugin-checkstyle').configurations.runtime
        }
        into("plugin-spotbugs") {
            from project(':modules:plugin-spotbugs').configurations.runtime.allArtifacts.files
            from project(':modules:plugin-spotbugs').configurations.runtime
        }
        into("plugin-pmd") {
            from project(':modules:plugin-pmd').configurations.runtime.allArtifacts.files
            from project(':modules:plugin-pmd').configurations.runtime
        }
        into("plugin-springboot") {
            from project(':modules:plugin-springboot').configurations.runtime.allArtifacts.files
            from project(':modules:plugin-springboot').configurations.runtime
        }
        into("plugin-idea") {
            from project(':modules:plugin-idea').configurations.runtime.allArtifacts.files
            from project(':modules:plugin-idea').configurations.runtime
        }
        into("plugin-eclipse") {
            from project(':modules:plugin-eclipse').configurations.runtime.allArtifacts.files
            from project(':modules:plugin-eclipse').configurations.runtime
        }
        into("scripts") {
            from 'scripts/loom'
            from 'scripts/loom.cmd'

            filter{
                String line -> line.replaceAll("@LOOM_VERSION@", version)
            }
        }
    }
}

build.dependsOn zip
